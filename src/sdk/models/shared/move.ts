/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

export enum MoveAfterStateCurrentMark {
    X = "X",
    O = "O",
}

export class MoveAfterStateGrid extends SpeakeasyBase {
    @SpeakeasyMetadata()
    cells?: string;
}

export class MoveAfterStatePossibleMovesAfterStateGrid extends SpeakeasyBase {
    @SpeakeasyMetadata()
    cells?: string;
}

export enum MoveAfterStatePossibleMovesAfterStateStartingMark {
    X = "X",
    O = "O",
}

export class MoveAfterStatePossibleMovesAfterState extends SpeakeasyBase {
    @SpeakeasyMetadata()
    grid?: MoveAfterStatePossibleMovesAfterStateGrid;

    @SpeakeasyMetadata()
    startingMark?: MoveAfterStatePossibleMovesAfterStateStartingMark;
}

export class MoveAfterStatePossibleMovesBeforeStateGrid extends SpeakeasyBase {
    @SpeakeasyMetadata()
    cells?: string;
}

export enum MoveAfterStatePossibleMovesBeforeStateStartingMark {
    X = "X",
    O = "O",
}

export class MoveAfterStatePossibleMovesBeforeState extends SpeakeasyBase {
    @SpeakeasyMetadata()
    grid?: MoveAfterStatePossibleMovesBeforeStateGrid;

    @SpeakeasyMetadata()
    startingMark?: MoveAfterStatePossibleMovesBeforeStateStartingMark;
}

export enum MoveAfterStatePossibleMovesMark {
    X = "X",
    O = "O",
}

export class MoveAfterStatePossibleMoves extends SpeakeasyBase {
    @SpeakeasyMetadata()
    afterState?: MoveAfterStatePossibleMovesAfterState;

    @SpeakeasyMetadata()
    beforeState?: MoveAfterStatePossibleMovesBeforeState;

    @SpeakeasyMetadata()
    cellIndex?: number;

    @SpeakeasyMetadata()
    mark?: MoveAfterStatePossibleMovesMark;
}

export enum MoveAfterStateStartingMark {
    X = "X",
    O = "O",
}

export enum MoveAfterStateWinner {
    X = "X",
    O = "O",
}

export class MoveAfterState extends SpeakeasyBase {
    @SpeakeasyMetadata()
    currentMark?: MoveAfterStateCurrentMark;

    @SpeakeasyMetadata()
    gameNotStarted?: boolean;

    @SpeakeasyMetadata()
    gameOver?: boolean;

    @SpeakeasyMetadata()
    grid?: MoveAfterStateGrid;

    @SpeakeasyMetadata({ elemType: MoveAfterStatePossibleMoves })
    possibleMoves?: MoveAfterStatePossibleMoves[];

    @SpeakeasyMetadata()
    startingMark?: MoveAfterStateStartingMark;

    @SpeakeasyMetadata()
    tie?: boolean;

    @SpeakeasyMetadata()
    winner?: MoveAfterStateWinner;

    @SpeakeasyMetadata()
    winningCells?: number[];
}

export class Move extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: MoveAfterState })
    afterState?: MoveAfterState[];
}
